pyuncertainnumber.pba.distributions
===================================

.. py:module:: pyuncertainnumber.pba.distributions

.. autoapi-nested-parse::

   distribution constructs



Attributes
----------

.. autoapisummary::

   pyuncertainnumber.pba.distributions.named_dists


Classes
-------

.. autoapisummary::

   pyuncertainnumber.pba.distributions.Distribution


Functions
---------

.. autoapisummary::

   pyuncertainnumber.pba.distributions.bernoulli
   pyuncertainnumber.pba.distributions.beta
   pyuncertainnumber.pba.distributions.betabinomial2
   pyuncertainnumber.pba.distributions.betabinomial
   pyuncertainnumber.pba.distributions.binomial
   pyuncertainnumber.pba.distributions.chisquared
   pyuncertainnumber.pba.distributions.delta
   pyuncertainnumber.pba.distributions.exponential
   pyuncertainnumber.pba.distributions.exponential1
   pyuncertainnumber.pba.distributions.F
   pyuncertainnumber.pba.distributions.gamma
   pyuncertainnumber.pba.distributions.gammaexponential
   pyuncertainnumber.pba.distributions.geometric
   pyuncertainnumber.pba.distributions.gumbel
   pyuncertainnumber.pba.distributions.inversechisquared
   pyuncertainnumber.pba.distributions.inversegamma
   pyuncertainnumber.pba.distributions.laplace
   pyuncertainnumber.pba.distributions.logistic
   pyuncertainnumber.pba.distributions.lognormal
   pyuncertainnumber.pba.distributions.lognormal2
   pyuncertainnumber.pba.distributions.loguniform_solve
   pyuncertainnumber.pba.distributions.loguniform
   pyuncertainnumber.pba.distributions.loguniform1
   pyuncertainnumber.pba.distributions.negativebinomial
   pyuncertainnumber.pba.distributions.normal
   pyuncertainnumber.pba.distributions.pareto
   pyuncertainnumber.pba.distributions.poisson
   pyuncertainnumber.pba.distributions.powerfunction
   pyuncertainnumber.pba.distributions.rayleigh
   pyuncertainnumber.pba.distributions.sawinconrad
   pyuncertainnumber.pba.distributions.student
   pyuncertainnumber.pba.distributions.uniform
   pyuncertainnumber.pba.distributions.triangular
   pyuncertainnumber.pba.distributions.histogram
   pyuncertainnumber.pba.distributions.mixture
   pyuncertainnumber.pba.distributions.left
   pyuncertainnumber.pba.distributions.right
   pyuncertainnumber.pba.distributions.uniroot


Module Contents
---------------

.. py:class:: Distribution

   two signature for the distribution object, either a parametric specification or a nonparametric sample per se


   .. py:attribute:: dist_family
      :type:  str
      :value: None



   .. py:attribute:: dist_params
      :type:  list[float] | Tuple[float, Ellipsis]
      :value: None



   .. py:attribute:: sample_data
      :type:  list[float] | numpy.ndarray
      :value: None



   .. py:method:: __post_init__()


   .. py:method:: __repr__()


   .. py:method:: rep()

      the dist object either sps dist or sample approximated or pbox dist



   .. py:method:: flag()

      boolean flag for if the distribution is a parameterised distribution or not
      .. note::

         - only parameterised dist can do sampling
         - for non-parameterised sample-data based dist, next steps could be fitting



   .. py:method:: sample(size)

      generate deviates from the distribution



   .. py:method:: make_naked_value()

      one value representation of the distribution
      .. note:: - use mean for now;



   .. py:method:: display(**kwargs)

      display the distribution



   .. py:method:: _get_hint()


   .. py:method:: fit(data)

      fit the distribution to the data



   .. py:property:: naked_value


   .. py:property:: hint


   .. py:method:: dist_from_sps(dist: scipy.stats.rv_continuous | scipy.stats.rv_discrete, shape: str = None)
      :classmethod:



   .. py:method:: to_pbox()

      convert the distribution to a pbox
      .. note::

         - this only works for parameteried distributions for now
         - later on work with sample-approximated dist until `fit()`is implemented



.. py:function:: bernoulli(p)

.. py:function:: beta(a, b)

.. py:function:: betabinomial2(size, v, w)

.. py:function:: betabinomial(size, v, w)

.. py:function:: binomial(size, p)

.. py:function:: chisquared(v)

.. py:function:: delta(a)

.. py:function:: exponential(rate=1, mean=None)

.. py:function:: exponential1(mean=1)

.. py:function:: F(df1, df2)

.. py:function:: gamma(shape, rate=1, scale=None)

.. py:function:: gammaexponential(shape, rate=1, scale=None)

.. py:function:: geometric(m)

.. py:function:: gumbel(loc, scale)

.. py:function:: inversechisquared(v)

.. py:function:: inversegamma(shape, scale=None, rate=None)

.. py:function:: laplace(a, b)

.. py:function:: logistic(loc, scale)

.. py:function:: lognormal(m, s)

.. py:function:: lognormal2(mlog, slog)

.. py:function:: loguniform_solve(m, v)

.. py:function:: loguniform(min=None, max=None, minlog=None, maxlog=None, mean=None, std=None)

.. py:function:: loguniform1(m, s)

.. py:function:: negativebinomial(size, prob)

.. py:function:: normal(m, s)

.. py:function:: pareto(mode, c)

.. py:function:: poisson(m)

.. py:function:: powerfunction(b, c)

.. py:function:: rayleigh(loc, scale)

.. py:function:: sawinconrad(min, mu, max)

.. py:function:: student(v)

.. py:function:: uniform(a, b)

.. py:function:: triangular(min, mode, max)

.. py:function:: histogram(x)

.. py:function:: mixture(x, w=None)

.. py:function:: left(x)

.. py:function:: right(x)

.. py:function:: uniroot(f, a)

.. py:data:: named_dists

