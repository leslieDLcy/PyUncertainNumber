pyuncertainnumber.characterisation.uncertainty_types
====================================================

.. py:module:: pyuncertainnumber.characterisation.uncertainty_types


Classes
-------

.. autoapisummary::

   pyuncertainnumber.characterisation.uncertainty_types.Uncertainty_types


Module Contents
---------------

.. py:class:: Uncertainty_types(*args, **kwds)

   Bases: :py:obj:`enum.Enum`


   Create a collection of name/value pairs.

   Example enumeration:

   >>> class Color(Enum):
   ...     RED = 1
   ...     BLUE = 2
   ...     GREEN = 3

   Access them by:

   - attribute access::

   >>> Color.RED
   <Color.RED: 1>

   - value lookup:

   >>> Color(1)
   <Color.RED: 1>

   - name lookup:

   >>> Color['RED']
   <Color.RED: 1>

   Enumerations can be iterated over, and know how many members they have:

   >>> len(Color)
   3

   >>> list(Color)
   [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

   Methods can be added to enumerations, and members can have their own
   attributes -- see the documentation for details.


   .. py:attribute:: Certain
      :value: 'certain'



   .. py:attribute:: Aleatory
      :value: 'aleatory'



   .. py:attribute:: Epistemic
      :value: 'epistemic'



   .. py:attribute:: Inferential
      :value: 'inferential'



   .. py:attribute:: Design_uncertainty
      :value: 'design uncertainty'



   .. py:attribute:: Vagueness
      :value: 'vagueness'



   .. py:attribute:: Mixture
      :value: 'mixture'



