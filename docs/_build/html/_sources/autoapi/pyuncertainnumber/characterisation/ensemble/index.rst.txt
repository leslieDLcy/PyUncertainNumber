pyuncertainnumber.characterisation.ensemble
===========================================

.. py:module:: pyuncertainnumber.characterisation.ensemble


Classes
-------

.. autoapisummary::

   pyuncertainnumber.characterisation.ensemble.Ensemble


Module Contents
---------------

.. py:class:: Ensemble(*args, **kwds)

   Bases: :py:obj:`enum.Enum`


   Create a collection of name/value pairs.

   Example enumeration:

   >>> class Color(Enum):
   ...     RED = 1
   ...     BLUE = 2
   ...     GREEN = 3

   Access them by:

   - attribute access::

   >>> Color.RED
   <Color.RED: 1>

   - value lookup:

   >>> Color(1)
   <Color.RED: 1>

   - name lookup:

   >>> Color['RED']
   <Color.RED: 1>

   Enumerations can be iterated over, and know how many members they have:

   >>> len(Color)
   3

   >>> list(Color)
   [<Color.RED: 1>, <Color.BLUE: 2>, <Color.GREEN: 3>]

   Methods can be added to enumerations, and members can have their own
   attributes -- see the documentation for details.


   .. py:attribute:: repeated_measurements
      :value: 'repeated measurements'



   .. py:attribute:: flights
      :value: 'flights'



   .. py:attribute:: pressurisations
      :value: 'pressurisations'



   .. py:attribute:: temporal_steps
      :value: 'temporal steps'



   .. py:attribute:: spatial_sites
      :value: 'spatial sites'



   .. py:attribute:: manufactured_components
      :value: 'manufactured components'



   .. py:attribute:: customers
      :value: 'customers'



   .. py:attribute:: people
      :value: 'people'



   .. py:attribute:: households
      :value: 'households'



   .. py:attribute:: particular_population
      :value: 'particular population'



