UC module:
    ✔ work on the functionality of units @done (21/10/2024, 10:37:04)
    ✔ add the auxiliary information to UC module @done (30/09/2024, 07:12:12)
    ☐ unified style of plotting funcs for interval, pbox
    ☐ change to a dispatcher for bounds specification (i.e. work on `parse_description`)
    ☐ `from_constraints()` entry-level func does not work from `pba` API and `UN` API


fit distribution:
    ☐ Bayesian methods are not supported yet
    ☐ test ML*() with many distributions
    ☐ #! think about adding the 'interval_measurement' decorator in improving consistency

other:
    ✔ plot function @done (03/12/2024, 14:45:18)
    ☐ matplotlib what if `latex` not installed
    ☐ add `importlib` to operation.py
    ☐ unit not finished due to the stupid two Registry stuff



interval stuff:
    ☐ add the plotting functions to Marco's package
    add language parsing funcs to Marco's package



DS structure:
    ✔ create a class for that @done (08/12/2024, 16:04:08)
    ✔ stochastic mixture of DS structure not finished @done (08/12/2024, 16:04:09)
    ☐ color of both bounds seem to be reversed as in (stacking())


pbox:
    ☐ construct pbox(either distributional or nonparametric) from dataset 
    ☐ drawing samples from pbox
    ☐ propagating with pbox
    ✔ construct pbox from data or from partial knowledge on the distribution property (i.e. min, max, mean, variance, etc.)? @done (04/11/2024, 11:46:39)
    ☐ pbox arithmetic with various dependecy NOT finsihed
    ☐ pbox aggregation from multiple sources
    ☐ unary functions are still lacking for e.g. sin(), cos(), etc..



cbox:
    ☐ ci function with arguments
    ✔ print out the bounds parameters when instantiating the cbox @done (03/12/2024, 14:24:46)
    ☐ interval statistics



hedge:
    ☐ pbox construction from hedge language


UP module personal:
    ☐ test the new functionality from Ioanna
    ☐ Test on the surrogate models
    ☐ see how [Sympy](https://docs.sympy.org/latest/index.html) can help with arithmetic operations of PyUncertainNumber
    ☐ envelop the results of min and max y
    ☐ TODO add typing for UncertainNumber for the performance function;



UP methods implementation checklist:
    ✔ endpoints @done (27/11/2024, 11:46:08)
    ☐ taylor expansion
    ✔ subinterval @done (27/11/2024, 11:46:11)
    ✔ optimiation methods @done (27/11/2024, 11:46:12)
    ☐ cauchy deviate


integration of UP module with Ioanna:
    ✔ For the top-level function, what are the **returns** for each option? are they consistent? @done (19/11/2024, 13:25:25)
    ✔ are the returns from calling `up_bb(method= xxx)` as in `xxx` in {} consistent?? @high @done (19/11/2024, 13:25:30)
    ☐ change the name 'up_bb'@critical 
    ✔ the top-level func `up_bb()` takes in a list of UN objects @done (18/11/2024, 12:21:28)
    ✔ the top-level func `up_bb()` outputs UN objects @done (19/11/2024, 13:25:45)
    ☐ #TODO could Scott elaborate on envelop for mixed uncertainty propagation ?
    ☐ what's the difference between the new 'endpoints_method' and Marco's `endpoints_*_2n` function?
    ☐ ask Scott I'd assume that currently 'montecarlo' in the cases of intervals mean drawing samples from a Uniform distribution? (yes)
    ✔ calling signatures of the umbrella top-level functions 'up_bb()' are not consistent. some return intermediate combinations such as endpoints while some do not as optimisation @done (19/11/2024, 14:15:49)
    ✔ the returns are fairly different @done (19/11/2024, 12:02:23) half-solved by all returning dict by now
    ✔ some UP methods are still missing @done (19/11/2024, 14:14:56)
    ☐ mixed uncertainty how to work with 'up_bb()'
    ☐ cauchy deviate will be added by Ioanna
    ☐ taylor expansion not 100 percent;




preparation for the December workshop:
    ✔ a personal notebook named features @done (17/11/2024, 20:17:40)
    ☐ package documentation @high 
    ✔ slides in Beams @done (17/11/2024, 20:17:31)
    ☐ notebook on installation
    ✔ notebook on the Cantilever beam example @done (17/12/2024, 09:41:23)


    
Overarching:
    ☐ plotting with range between the bounds
    ☐ report a pba bug in the function `min_max_mean_var`



website workshop:
    ✔ GDPR data protection disclaimer @done (17/12/2024, 09:52:08)
    ✔ experince Python and UQ background @done (17/12/2024, 09:59:31)
    ☐ if there's lunch
    ✔ only email address is required @done (17/12/2024, 09:56:36)ß
    ✔ question on the form: either come in person or online @done (17/12/2024, 09:57:21)



some questions for the workshop:
    ☐ levels of abstractions